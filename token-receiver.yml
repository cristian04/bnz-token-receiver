apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: 2017-10-16T04:44:01Z
  generation: 3
  labels:
    run: extractor-token-receiver
  name: extractor-token-receiver
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      run: extractor-token-receiver
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: extractor-token-receiver
    spec:
      containers:
      - image: extractor-token-receiver:latest
        imagePullPolicy: IfNotPresent
        name: extractor-token-receiver
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 5
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: 2017-10-20T08:03:20Z
    lastUpdateTime: 2017-10-20T08:03:20Z
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  observedGeneration: 3
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1

---
apiVersion: v1
kind: Service
metadata:
  labels:
    run: extractor-token-receiver
  name: extractor-token-receiver
  namespace: default
spec:
  clusterIP: 10.0.0.33
  externalTrafficPolicy: Cluster
  ports:
  - nodePort: 31832
    port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    run: extractor-token-receiver
  sessionAffinity: None
  type: NodePort
status:
  loadBalancer: {}

---
apiVersion: v1
data:
  token: Q1JJU1RJQU4K
kind: Secret
metadata:
  name: bnz
  namespace: default
type: Opaque
